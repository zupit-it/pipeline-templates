name: Sonar analyze with artifacts

on:
  workflow_call:
    inputs:
      RUN_ON:
        required: false
        type: string
        default: "zupit-agents"
      RUNNERS_CONTAINER_GROUP:
        required: false
        type: string
        default: "Container"
      WORKING_DIRECTORY:
        required: true
        type: string
      SONAR_IMAGE:
        required: false
        type: string
        default: "ghcr.io/zupit-it/pipeline-templates/flutter-sonar-scanner-cli:5.0.1"
      DOWNLOAD_ARTIFACT:
        required: false
        type: boolean
        default: true
      ARTIFACT_FILENAME:
        required: false
        type: string
        default: ""
      ARTIFACT_PATH:
        required: false
        type: string
        default: ".coverage-reports/"
      PRE_SCAN_COMMANDS:
        required: false
        type: string
        default: ""
      CHECK_QUALITY_GATE:
        required: false
        type: boolean
        default: false
      CHECK_WORKDIR_CHANGES:
        required: true
        type: boolean
        default: false
      CHECK_CUSTOM_DIR:
        required: false
        type: string
        default: ""
      CHECK_CHANGES_BY_JOBS:
        required: false
        type: string
        default: "all"

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  CHECK_DIR: ${{ inputs.WORKING_DIRECTORY }}

jobs:
  workdir-has-changes:
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    outputs:
      changes-detected: ${{ steps.filter.outputs.changes-detected }}
    steps:
      - name: Set CHECK_DIR to custom directory if provided
        if: ${{ inputs.CHECK_CUSTOM_DIR != '' }}
        run: echo "CHECK_DIR=${{ inputs.CHECK_CUSTOM_DIR }}" >> $GITHUB_ENV
      - name: Set default CHECK_DIR
        if: ${{ inputs.CHECK_CUSTOM_DIR == '' }}
        run: echo "CHECK_DIR=${{ inputs.WORKING_DIRECTORY }}" >> $GITHUB_ENV
      - name: Configure Git safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changes-detected:
              - "${{ env.CHECK_DIR }}/**"

  sonar-analyze:
    needs: workdir-has-changes
    if: ${{ !inputs.CHECK_WORKDIR_CHANGES || (needs.workdir-has-changes.outputs.changes-detected == 'true' && (inputs.CHECK_CHANGES_BY_JOBS == 'all' || contains(fromJson(inputs.CHECK_CHANGES_BY_JOBS), github.job)))}}
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    container:
      image: ${{ inputs.SONAR_IMAGE }}
      options: --user root
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage artifact
        if: ${{ inputs.DOWNLOAD_ARTIFACT }}
        uses: actions/download-artifact@v4
        with:
          name: ${{inputs.ARTIFACT_FILENAME}}
          path: ${{ inputs.WORKING_DIRECTORY }}/${{ inputs.ARTIFACT_PATH }}

      - name: Run PRE_SCAN_COMMANDS commands
        if: ${{ inputs.PRE_SCAN_COMMANDS != '' }}
        run: ${{ inputs.PRE_SCAN_COMMANDS }}

      - name: Run Sonar
        run: sonar-scanner -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.qualitygate.wait=${{ inputs.CHECK_QUALITY_GATE }}

  jobs-succeded:
    needs: ["sonar-analyze"]
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    if: ${{ always()}}
    steps:
      - name: "Jobs: sonar-analyze didn't fail."
        run: if [[ "${{ needs.sonar-analyze.result }}" == "failure" ]]; then exit 1; fi
