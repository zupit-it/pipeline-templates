name: Node build and deploy to Azure Storage

on:
  workflow_call:
    inputs:
      RUN_ON:
        required: false
        type: string
        default: "zupit-agents"
      RUNNERS_CONTAINER_GROUP:
        required: false
        type: string
        default: "Container"
      NODE_VERSION:
        required: true
        type: string
      RELEASE_ENVIRONMENT:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      STORAGE_ACCOUNT_NAME:
        required: true
        type: string
      DIST_PATH:
        required: true
        type: string
      BUILD_ARGS:
        required: false
        type: string
        default: ""
      CDN_PROFILE_NAME:
        required: false
        type: string
        default: ""
      CDN_ENDPOINT_NAME:
        required: false
        type: string
        default: ""
      CDN_RG_NAME:
        required: false
        type: string
        default: ""
      FD_RG_NAME:
        required: false
        type: string
        default: ""
      FD_ENDPOINT_NAME:
        required: false
        type: string
        default: ""
      FD_DOMAIN_NAME:
        required: false
        type: string
        default: ""
      FD_PROFILE_NAME:
        required: false
        type: string
        default: ""
      ENV_VARIABLES:
        required: false
        type: string
        default: "{}"
      PROJECT:
        required: false
        type: string
        default: ""
      IMAGE:
        required: false
        type: string
        default: "ubuntu:23.04"
      AZURE_CLI_IMAGE:
        required: false
        type: string
        default: "mcr.microsoft.com/azure-cli:2.50.0"
      CHECKOUT_REF:
        required: false
        type: string
        default: ""

env: "${{secrets}}"

jobs:
  build-node-project:
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    container:
      image: ${{ inputs.IMAGE }}

    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}

    outputs:
      ARTIFACT_NAME: ${{ steps.artifact-name.outputs.ARTIFACT_NAME }}

    env: ${{ fromJson(inputs.ENV_VARIABLES) }}
    steps:
      - name: Generate artifact name
        id: artifact-name
        uses: zupit-it/pipeline-templates/.github/actions/artifact/generate-name@ZCH-126/caching
        with:
          NAME_PREFIX: node-build

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.CHECKOUT_REF }}

      - name: Build
        uses: zupit-it/pipeline-templates/.github/actions/node/build@ZCH-126/caching
        with:
          NODE_VERSION: ${{ inputs.NODE_VERSION }}
          RELEASE_ENVIRONMENT: ${{ inputs.RELEASE_ENVIRONMENT }}
          WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
          BUILD_ARGS: ${{ inputs.BUILD_ARGS }}
          PROJECT: ${{ inputs.PROJECT }}
          CHECKOUT_REF: ${{ inputs.CHECKOUT_REF }}

      - name: Upload build artifact
        uses: zupit-it/pipeline-templates/.github/actions/artifact/upload@ZCH-126/caching
        with:
          SOURCE_FOLDER: ${{ inputs.WORKING_DIRECTORY }}/${{ inputs.DIST_PATH }}
          ARTIFACT_NAME: ${{ steps.artifact-name.outputs.ARTIFACT_NAME }}

  node-deploy-azure-storage:
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    env: ${{ fromJson(inputs.ENV_VARIABLES) }}
    environment: ${{ inputs.RELEASE_ENVIRONMENT }}
    container:
      image: ${{ inputs.AZURE_CLI_IMAGE }}

    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
    needs: [build-node-project]
    steps:
      - name: Download build artifact
        id: output-folder
        uses: zupit-it/pipeline-templates/.github/actions/artifact/download@ZCH-126/caching
        with:
          ARTIFACT_NAME: ${{ needs.build-node-project.outputs.ARTIFACT_NAME }}

      - name: Deploy to Azure Storage
        uses: zupit-it/pipeline-templates/.github/actions/azure/storage/deploy@ZCH-126/caching
        with:
          WORKING_DIRECTORY: ${{ steps.output-folder.outputs.OUTPUT_FOLDER }}
          BINARIES_DIRECTORY: ""
          AZURE_CREDENTIALS: ${{ secrets.CI_AZURE_CREDENTIALS }}
          STORAGE_ACCOUNT_NAME: ${{ inputs.STORAGE_ACCOUNT_NAME }}
          CDN_PROFILE_NAME: ${{ inputs.CDN_PROFILE_NAME }}
          CDN_ENDPOINT_NAME: ${{ inputs.CDN_ENDPOINT_NAME }}
          CDN_RG_NAME: ${{ inputs.CDN_RG_NAME }}
          FD_RG_NAME: ${{ inputs.FD_RG_NAME }}
          FD_ENDPOINT_NAME: ${{ inputs.FD_ENDPOINT_NAME }}
          FD_DOMAIN_NAME: ${{ inputs.FD_DOMAIN_NAME }}
          FD_PROFILE_NAME: ${{ inputs.FD_PROFILE_NAME }}
