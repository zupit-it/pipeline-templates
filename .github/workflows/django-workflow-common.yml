name: Django common

on:
  workflow_call:
    inputs:
      # Projects inputs
      WORKING_DIRECTORY:
        required: true
        type: string
      PYTHON_IMAGE:
        required: true
        type: string
      COVERAGE_ARTIFACT_NAME:
        required: false
        type: string
        default: "coverage-django.xml"
      SETUP_COMMANDS:
        required: false
        type: string
        default: ""
      # Workflow inputs
      RUN_ON:
        required: false
        type: string
        default: "zupit-agents"
      RUNNERS_CONTAINER_GROUP:
        required: false
        type: string
        default: "Container"
      RUN:
        required: false
        type: boolean
        default: true
      DJANGO_MIGRATIONS_CHECK_APPS:
        required: false
        type: string
        default: ""
      ENABLE_LFS:
        required: false
        type: boolean
        default: false
      # Workaround for https://github.com/actions/checkout/issues/1169
      LFS_REPO_PATH:
        required: false
        type: string
        default: ""
      COVERAGE_THRESHOLD:
        required: false
        type: number
        default: 50
      CHECK_WORKDIR_CHANGES:
        required: true
        type: boolean
        default: false
      CHECK_CUSTOM_DIR:
        required: false
        type: string
        default: ""
      CHECK_CHANGES_BY_JOBS:
        required: false
        type: string
        default: "all"
env:
  CHECK_DIR: ${{ inputs.WORKING_DIRECTORY }}

jobs:
  workdir-has-changes:
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    outputs:
      changes-detected: ${{ steps.filter.outputs.changes-detected }}
    steps:
      - name: Set CHECK_DIR to custom directory if provided
        if: ${{ inputs.CHECK_CUSTOM_DIR != '' }}
        run: echo "CHECK_DIR=${{ inputs.CHECK_CUSTOM_DIR }}" >> $GITHUB_ENV
      - name: Set default CHECK_DIR
        if: ${{ inputs.CHECK_CUSTOM_DIR == '' }}
        run: echo "CHECK_DIR=${{ inputs.WORKING_DIRECTORY }}" >> $GITHUB_ENV
      - name: Configure Git safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            changes-detected:
              - "${{ env.CHECK_DIR }}/**"

  django-lint-check:
    needs: workdir-has-changes
    if: ${{ !inputs.CHECK_WORKDIR_CHANGES || (needs.workdir-has-changes.outputs.changes-detected == 'true' && (inputs.CHECK_CHANGES_BY_JOBS == 'all' || contains(fromJson(inputs.CHECK_CHANGES_BY_JOBS), github.job)))}}
    uses: ./.github/workflows/django-step-lint-check.yml
    with:
      RUN_ON: ${{inputs.RUN_ON}}
      RUNNERS_CONTAINER_GROUP: ${{inputs.RUNNERS_CONTAINER_GROUP}}
      WORKING_DIRECTORY: ${{inputs.WORKING_DIRECTORY}}
      PYTHON_IMAGE: ${{inputs.PYTHON_IMAGE}}
      RUN: ${{inputs.RUN}}
      DJANGO_MIGRATIONS_CHECK_APPS: ${{inputs.DJANGO_MIGRATIONS_CHECK_APPS}}
      SETUP_COMMANDS: ${{inputs.SETUP_COMMANDS}}
      ENABLE_LFS: ${{inputs.ENABLE_LFS}}
      LFS_REPO_PATH: ${{inputs.LFS_REPO_PATH}}
    secrets: inherit

  django-tests:
    needs: workdir-has-changes
    if: ${{ !inputs.CHECK_WORKDIR_CHANGES || (needs.workdir-has-changes.outputs.changes-detected == 'true' && (inputs.CHECK_CHANGES_BY_JOBS == 'all' || contains(fromJson(inputs.CHECK_CHANGES_BY_JOBS), github.job)))}}
    uses: ./.github/workflows/django-step-tests.yml
    with:
      RUN_ON: ${{inputs.RUN_ON}}
      RUNNERS_CONTAINER_GROUP: ${{inputs.RUNNERS_CONTAINER_GROUP}}
      WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
      PYTHON_IMAGE: ${{ inputs.PYTHON_IMAGE }}
      COVERAGE_ARTIFACT_NAME: ${{ inputs.COVERAGE_ARTIFACT_NAME }}
      RUN: ${{inputs.RUN}}
      SETUP_COMMANDS: ${{ inputs.SETUP_COMMANDS }}
      ENABLE_LFS: ${{inputs.ENABLE_LFS}}
      LFS_REPO_PATH: ${{inputs.LFS_REPO_PATH}}
      COVERAGE_THRESHOLD: ${{inputs.COVERAGE_THRESHOLD}}
    secrets: inherit

  jobs-succeded:
    needs: ["django-lint-check", "django-tests"]
    runs-on:
      labels: ${{ inputs.RUN_ON }}
      group: ${{ inputs.RUNNERS_CONTAINER_GROUP }}
    if: ${{ always()}}
    steps:
      - name: "Jobs: django-lint-check, django-tests didn't fail."
        run: if [[ "${{ needs.django-lint-check.result }}" == "failure" || "${{ needs.django-tests.result }}" == "failure" ]]; then exit 1; fi
